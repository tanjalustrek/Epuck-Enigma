<?xml version = "1.0" ?>
<robot
  name="epuck">
<link name="base_link"/>

  <joint name= "base_link_to_main_body" type = "fixed">
   <parent link = "base_link"/>
   <child link = "main_body"/>
   <origin rpy="0 0 1.57079633" xyz="0.0 -0.0 0.0"/>
  </joint>


  <link
    name="main_body">
    <inertial>
      <origin
        xyz="9.0274E-05 -0.00041659 0.019845"
        rpy="0 0 0" />
      <mass
        value="0.063515" />
      <inertia
        ixx="3.2227E-05"
        ixy="-2.691E-07"
        ixz="4.7122E-08"
        iyy="2.4227E-05"
        iyz="-1.2861E-06"
        izz="3.3868E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="/home/romi-lab-2/project_ws/src/my_simulation/my_simulation/meshes/urdf/main_body.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.75294 0.75294 0.75294 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="/home/romi-lab-2/project_ws/src/my_simulation/my_simulation/meshes/urdf/main_body.STL" />
      </geometry>
    </collision>
  </link>
  
  <link name="proximity_0_link"/>
  <joint name="proximity_0_joint" type="fixed">
    <origin rpy="0 0 -0.2617994" xyz="0.04 -0.011 0.035"/>
    <parent link="base_link"/>
    <child link="proximity_0_link"/>
  </joint>
  <gazebo reference="proximity_0_link">
    <sensor name="proximity_0_sensor" type="ray">
      <frame name="proximity_0_link"/>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0</min>
          <!---max>0.12</max-->
          <max>1.0</max>
          <resolution>0.005</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0025</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="proximity_0_controller">
        <!-- TODO: check if field `radiation` is still valid-->
        <radiation_type>infrared</radiation_type>
        <ros>
          <namespace>my_namespace</namespace>
          <argument>~/out:=proximity_0</argument>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
      </plugin>
    </sensor>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <link name="proximity_1_link"/>
  <joint name="proximity_1_joint" type="fixed">
    <origin rpy="0 0 -0.78539816" xyz="0.026 -0.026 0.035"/>
    <parent link="base_link"/>
    <child link="proximity_1_link"/>
  </joint>
  <gazebo reference="proximity_1_link">
    <sensor name="proximity_1_sensor" type="ray">
      <frame name="proximity_1_link"/>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0</min>
          <!---max>0.12</max-->
          <max>1.0</max>
          <resolution>0.005</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0025</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="proximity_1_controller">
        <!-- TODO: check if field `radiation` is still valid-->
        <radiation_type>infrared</radiation_type>
        <ros>
          <namespace>my_namespace</namespace>
          <argument>~/out:=proximity_1</argument>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
      </plugin>
    </sensor>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <link name="proximity_2_link"/>
  <joint name="proximity_2_joint" type="fixed">
    <origin rpy="0 0 -1.57079633" xyz="0.001 -0.037 0.035"/>
    <parent link="base_link"/>
    <child link="proximity_2_link"/>
  </joint>
  <gazebo reference="proximity_2_link">
    <sensor name="proximity_2_sensor" type="ray">
      <frame name="proximity_2_link"/>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0</min>
          <!---max>0.12</max-->
          <max>1.0</max>
          <resolution>0.005</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0025</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="proximity_2_controller">
        <!-- TODO: check if field `radiation` is still valid-->
        <radiation_type>infrared</radiation_type>
        <ros>
          <namespace>my_namespace</namespace>
          <argument>~/out:=proximity_2</argument>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
      </plugin>
    </sensor>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <link name="proximity_3_link"/>
  <joint name="proximity_3_joint" type="fixed">
    <origin rpy="0 0 -2.6179939" xyz="-0.032 -0.019 0.035"/>
    <parent link="base_link"/>
    <child link="proximity_3_link"/>
  </joint>
  <gazebo reference="proximity_3_link">
    <sensor name="proximity_3_sensor" type="ray">
      <frame name="proximity_3_link"/>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0</min>
          <!---max>0.12</max-->
          <max>1.0</max>
          <resolution>0.005</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0025</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="proximity_3_controller">
        <!-- TODO: check if field `radiation` is still valid-->
        <radiation_type>infrared</radiation_type>
        <ros>
          <namespace>my_namespace</namespace>
          <argument>~/out:=proximity_3</argument>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
      </plugin>
    </sensor>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <link name="proximity_4_link"/>
  <joint name="proximity_4_joint" type="fixed">
    <origin rpy="0 0 2.6179939" xyz="-0.032 0.019 0.035"/>
    <parent link="base_link"/>
    <child link="proximity_4_link"/>
  </joint>
  <gazebo reference="proximity_4_link">
    <sensor name="proximity_4_sensor" type="ray">
      <frame name="proximity_4_link"/>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0</min>
          <!---max>0.12</max-->
          <max>1.0</max>
          <resolution>0.005</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0025</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="proximity_4_controller">
        <!-- TODO: check if field `radiation` is still valid-->
        <radiation_type>infrared</radiation_type>
        <ros>
          <namespace>my_namespace</namespace>
          <argument>~/out:=proximity_4</argument>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
      </plugin>
    </sensor>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <link name="proximity_5_link"/>
  <joint name="proximity_5_joint" type="fixed">
    <origin rpy="0 0 1.57079633" xyz="0.001 0.037 0.035"/>
    <parent link="base_link"/>
    <child link="proximity_5_link"/>
  </joint>
  <gazebo reference="proximity_5_link">
    <sensor name="proximity_5_sensor" type="ray">
      <frame name="proximity_5_link"/>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0</min>
          <!---max>0.12</max-->
          <max>1.0</max>
          <resolution>0.005</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0025</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="proximity_5_controller">
        <!-- TODO: check if field `radiation` is still valid-->
        <radiation_type>infrared</radiation_type>
        <ros>
          <namespace>my_namespace</namespace>
          <argument>~/out:=proximity_5</argument>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
      </plugin>
    </sensor>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <link name="proximity_6_link"/>
  <joint name="proximity_6_joint" type="fixed">
    <origin rpy="0 0 0.78539816" xyz="0.026 0.026 0.035"/>
    <parent link="base_link"/>
    <child link="proximity_6_link"/>
  </joint>
  <gazebo reference="proximity_6_link">
    <sensor name="proximity_6_sensor" type="ray">
      <frame name="proximity_6_link"/>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0</min>
          <!---max>0.12</max-->
          <max>1.0</max>
          <resolution>0.005</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0025</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="proximity_6_controller">
        <!-- TODO: check if field `radiation` is still valid-->
        <radiation_type>infrared</radiation_type>
        <ros>
          <namespace>my_namespace</namespace>
          <argument>~/out:=proximity_6</argument>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
      </plugin>
    </sensor>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <link name="proximity_7_link"/>
  <joint name="proximity_7_joint" type="fixed">
    <origin rpy="0 0 0.2617994" xyz="0.04 0.011 0.035"/>
    <parent link="base_link"/>
    <child link="proximity_7_link"/>
  </joint>
  <gazebo reference="proximity_7_link">
    <sensor name="proximity_7_sensor" type="ray">
      <frame name="proximity_7_link"/>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>-0.0</min_angle>
            <max_angle>-0.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.0</min>
          <!---max>0.12</max-->
          <max>1.0</max>
          <resolution>0.005</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0025</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="proximity_7_controller">
        <!-- TODO: check if field `radiation` is still valid-->
        <radiation_type>infrared</radiation_type>
        <ros>
          <namespace>my_namespace</namespace>
          <argument>~/out:=proximity_7</argument>
        </ros>
        <output_type>sensor_msgs/Range</output_type>
      </plugin>
    </sensor>
    <material>Gazebo/DarkGrey</material>
  </gazebo>
  
  <link
    name="left_wheel">
    <inertial>
      <origin
        xyz="-0.00048709 -3.5245E-18 2.4286E-17"
        rpy="0 0 0" />
      <mass
        value="0.0040981" />
      <inertia
        ixx="8.267E-07"
        ixy="-9.8761E-23"
        ixz="-8.6429E-13"
        iyy="4.304E-07"
        iyz="-2.3376E-22"
        izz="4.304E-07" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="/home/romi-lab-2/project_ws/src/my_simulation/my_simulation/meshes/urdf/left_wheel.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="/home/romi-lab-2/project_ws/src/my_simulation/my_simulation/meshes/urdf/left_wheel.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="left_joint"
    type="continuous">
    <origin
      xyz="0.0278 0 0.02"
      rpy="0 0 0" />
    <parent
      link="main_body" />
    <child
      link="left_wheel" />
    <axis
      xyz="1 0 0" />
    <limit
      effort="0.001"
      velocity="10" />
  </joint>
  <link
    name="right_wheel">

    <inertial>
      <origin
        xyz="0.00065056 4.0415E-18 7.2858E-17"
        rpy="0 0 0" />
      <mass
        value="0.0038059" />
      <inertia
        ixx="8.2274E-07"
        ixy="-1.0753E-22"
        ixz="8.6429E-13"
        iyy="4.2585E-07"
        iyz="2.3307E-22"
        izz="4.2585E-07" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="/home/romi-lab-2/project_ws/src/my_simulation/my_simulation/meshes/urdf/right_wheel.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="/home/romi-lab-2/project_ws/src/my_simulation/my_simulation/meshes/urdf/right_wheel.STL" />
      </geometry>
    </collision>
  </link>

  <joint
    name="right_joint"
    type="continuous">
    <origin
      xyz="-0.0278 0 0.02"
      rpy="0 0 0" />
    <parent
      link="main_body" />
    <child
      link="right_wheel" />
    <axis
      xyz="1 0 0" />
    <limit
      effort="0.001"
      velocity="10" />
  </joint>
<gazebo reference="right_wheel">
    <selfCollide>true</selfCollide>
    <mu1>10</mu1>
    <mu2>10</mu2>
</gazebo>

<gazebo reference="left_wheel">
    <selfCollide>true</selfCollide>
    <mu1>10</mu1>
    <mu2>10</mu2>
</gazebo>
<gazebo>
  <!---plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>100.0</updateRate>
    <bodyName>base_link</bodyName>
    <topicName>position</topicName>
    <gaussianNoise>0</gaussianNoise>
    <frameName>map</frameName>
    <xyzOffsets>0 0 0</xyzOffsets> 
    <rpyOffsets>0 0 0</rpyOffsets>
    <interface:position name="p3d_base_position"/>
  </plugin-->
</gazebo>
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <alwaysOn>true</alwaysOn>
    <legacyMode>false</legacyMode>
    <updateRate>20</updateRate>
    <left_joint>left_joint</left_joint>
    <right_joint>right_joint</right_joint>
    <wheel_separation>0.05398</wheel_separation>
    <wheel_diameter>0.040</wheel_diameter>
    <torque>2</torque>
    <odometryFrame>odom</odometryFrame>
    <publishWheelTF>true</publishWheelTF>
    <wheelAcceleration>0</wheelAcceleration>
    <wheelTorque>0.0020</wheelTorque>
    <publishTf>1</publishTf>
    <odometrySource>1</odometrySource>
    <publishWheelJointState>true</publishWheelJointState>
    <robotMainFrame>footprint</robotMainFrame>
    <robotBaseFrame>base_link</robotBaseFrame>
    <namespace>my_namespace</namespace>
  </plugin>
  
  <plugin filename="libgazebo_ros_joint_state_publisher.so" name="joint_states">
      <joint_name>right_joint</joint_name>
      <joint_name>left_joint</joint_name>
      <update_rate>20.0</update_rate>
      <namespace>my_namespace</namespace>
    </plugin>
  
</gazebo>
</robot>